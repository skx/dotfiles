#!/bin/sh
#
#  Simple emacs/emacsclient wrapper.
#
#  Tested on Macos, and GNU/Linux
#
#


#
# If we're not running under X11, and there is a system
# binary then just load the real thing.
#
# This works well for me, because on Mac OS X we have our
# installation of GNU Emacs beneath /opt/..., via homebrew.
#
#
if [ -z "$DISPLAY" ]; then
    if [ -x /usr/bin/emacs ]; then
        exec /usr/bin/emacs $*
    fi
fi


# alternate falls on emacs --daemon
EMACS='emacsclient --alternate-editor="/usr/bin/emacs"'

# count opened window frames
XFRAMES=`emacsclient -e "(frame-list)" 2>/dev/null | grep -o '#<frame [^F][^>]*>' | wc -l`

if [ $XFRAMES = 0 ]; then
    EMACS="$EMACS -c"
fi

#
# For each argument we received ensure that we launch emacs.
#
# We use a loop rather than just executing `eval $EMACS -n $@` to ensure that
# we can cope when we're launched with multiple arguments, e.g:
#
#      e *.go
#
# Or:
#
#      e path\ with\ spaces.txt second.file.txt
#
if [ "$#" -gt 0 ]; then
    for i in "$@" ; do
        echo "Loading in existing Emacs instance: $i"
        eval $EMACS -n "\"$i\""
    done
    exit
fi


# If there is no frame then start one.
if [ $XFRAMES = 0 ]; then
    echo "Launching emacs - no files given on command-line."
    emacsclient --alternate-editor="/usr/bin/emacs" -n -c "$@"
else
    echo "Raising existing emacs - no files given on command-line."
    wmctrl -R emacs@
fi
